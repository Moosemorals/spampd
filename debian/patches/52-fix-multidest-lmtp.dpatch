#! /bin/sh /usr/share/dpatch/dpatch-run
## 52-fix-multidest-lmtp.dpatch by Vladislav Kurz <vladki@brno-czfree.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix LMTP for multiple destinations (has multiple 250 OK replies)

@DPATCH@
diff -urNad trunk/spampd /tmp/dpep.tGgV1c/trunk/spampd
--- trunk/spampd	2007-03-08 12:35:17.000000000 +0100
+++ /tmp/dpep.tGgV1c/trunk/spampd	2007-03-08 12:35:17.727473996 +0100
@@ -166,14 +166,18 @@
 		return 0 unless defined($_ = $self->_getline);
 		s/[\r\n]*$//;
 		$self->{state} = $_;
-		if (s/^.?he?lo\s+//i) {  # mp: find helo|ehlo|lhlo
-			# mp: determine protocol (for future use)
-			if ( /^L/i ) { 
-				$self->{proto} = "lmtp";
-			} elsif ( /^E/i ) { 
-    			$self->{proto} = "esmtp"; 
-			} else { 
-    			$self->{proto} = "smtp"; }
+		if (s/^helo\s+//i) {
+		    $self->{proto} = "smtp";
+		    s/\s*$//;
+		    s/\s+/ /g;
+		    $self->{helo} = $_;
+		} elsif (s/^ehlo\s+//i) {
+		    $self->{proto} = "esmtp";
+		    s/\s*$//;
+		    s/\s+/ /g;
+		    $self->{helo} = $_;
+		} elsif (s/^lhlo\s+//i) {
+		    $self->{proto} = "lmtp";
 		    s/\s*$//;
 		    s/\s+/ /g;
 		    $self->{helo} = $_;
@@ -606,6 +610,7 @@
 sub process_request {
   my $self = shift;
   my $msg;
+  my $rcpt_ok;
   	
   eval {
 	
@@ -702,6 +707,24 @@
 		  $self->log(2, "Destination response indicates error after DATA command"); }
 	  }
 
+	  # patch for LMTP - multiple responses after . after DATA, done by Vladislav Kurz
+	  # we have to count sucessful RCPT commands and then read the same amount of responses
+	  if ( $smtp_server->{proto} eq 'lmtp' ) {
+		if ( $smtp_server->{state} =~ /^rset/i ) { $rcpt_ok=0; }
+		if ( $smtp_server->{state} =~ /^mail/i ) { $rcpt_ok=0; }
+		if ( $smtp_server->{state} =~ /^rcpt/i and $destresp =~ /^25/ ) { $rcpt_ok++; }
+		if ( $smtp_server->{state} eq '.' ) {
+			while ( --$rcpt_ok ) {
+				$destresp = $client->hear;
+				$smtp_server->ok($destresp)
+				    or die "Error in server->ok(client->hear): $!";
+				if ( $self->{spampd}->{debug} ) {
+				    $self->log(2, "%s", "Destination response: '" . $destresp . "'");
+				}
+			}
+		}
+	  }
+
 	  # restart the timeout alarm  
 	  alarm($timeout);
 		
